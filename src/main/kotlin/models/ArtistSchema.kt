/**
* Nekos API
* An open source anime artworks API.
*
* OpenAPI spec version: v3
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package news.models

import kotlinx.serialization.Serializable






import kotlinx.serialization.SerialName


/**
 * 
 * @param id The artist's ID.
 * @param name The artist's name.
 * @param aliases Other names by which the artist is known.
 * @param imageUrl An attempt to serve an artist PFP. This will probably stay outdated if they change their image after we upload it (they probably will at some point).
 * @param links A list of links to official pages for the artist, like SNS or their website. They may be outdated if the artist changes their URL.
 * @param policyRepost Does this artist allow you to repost their art in other places?
 * @param idV2 The character's ID in the v2 API. Format: UUID
 * @param policyCredit Are you required to credit the artist when using their art?
 * @param policyAi Does the artist allow you to use their art for AI projects (AI training)?
 */
@Serializable
internal data class ArtistSchema (
    /* The artist's ID. */
    
    @SerialName("id")
    val id: kotlin.Int,
    /* The artist's name. */
    
    @SerialName("name")
    val name: kotlin.String,
    /* Other names by which the artist is known. */
    
    @SerialName("aliases")
    val aliases: kotlin.collections.List<kotlin.String>,
    /* An attempt to serve an artist PFP. This will probably stay outdated if they change their image after we upload it (they probably will at some point). */
    
    @SerialName("image_url")
    val imageUrl: kotlin.String,
    /* A list of links to official pages for the artist, like SNS or their website. They may be outdated if the artist changes their URL. */
    
    @SerialName("links")
    val links: kotlin.collections.List<kotlin.String>,
    /* Does this artist allow you to repost their art in other places? */
    
    @SerialName("policy_repost")
    val policyRepost: kotlin.Boolean,
    /* The character's ID in the v2 API. Format: UUID */
    
    @SerialName("id_v2")
    val idV2: kotlin.String? = null,
    /* Are you required to credit the artist when using their art? */
    
    @SerialName("policy_credit")
    val policyCredit: kotlin.Boolean = true,
    /* Does the artist allow you to use their art for AI projects (AI training)? */
    
    @SerialName("policy_ai")
    val policyAi: kotlin.Boolean = false

) {

}

