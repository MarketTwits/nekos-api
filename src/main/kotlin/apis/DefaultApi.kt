/**
* Nekos API
* An open source anime artworks API.
*
* OpenAPI spec version: v3
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package news.apis


import dev.icerock.moko.network.NetworkResponse
import io.ktor.client.call.body
import io.ktor.client.HttpClient
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.request
import io.ktor.client.request.forms.FormDataContent
import io.ktor.client.request.setBody
import io.ktor.http.ContentType
import io.ktor.http.HttpMethod
import io.ktor.http.Parameters
import io.ktor.http.takeFrom
import kotlinx.serialization.json.Json
import kotlinx.serialization.builtins.ListSerializer
import kotlinx.serialization.builtins.MapSerializer
import kotlinx.serialization.builtins.SetSerializer
import kotlinx.serialization.builtins.serializer
import io.ktor.client.call.ReceivePipelineException
import io.ktor.client.request.forms.MultiPartFormDataContent
import io.ktor.client.request.forms.formData
import io.ktor.client.request.forms.submitFormWithBinaryData
import io.ktor.http.ContentDisposition
import io.ktor.http.HttpHeaders
import io.ktor.http.content.TextContent
import io.ktor.http.Headers
import io.ktor.utils.io.core.Input
import io.ktor.http.encodedPath
import io.ktor.http.path

internal interface DefaultApi {

    /**
    * Get a summary of the API.
    * Returns a bunch of data about the API, like endpoints, versions, and more. This is not really intended to be used by programs, but rather for users (devs) to see when they first use the API.
    * @return void
    */
    suspend fun nekosapiApiIndex() : kotlin.Unit

    /**
    * Get a summary of the API.
    * Returns a bunch of data about the API, like endpoints, versions, and more. This is not really intended to be used by programs, but rather for users (devs) to see when they first use the API.
    * @return HttpResponse
    */
    suspend fun nekosapiApiIndexResponse() : kotlin.Unit


    companion object {
        operator fun invoke(basePath: String = "https://api.nekosapi.com", httpClient: HttpClient, json: Json): DefaultApi = DefaultApiImpl(basePath, httpClient, json)
    }
}

internal class DefaultApiImpl(basePath: kotlin.String, httpClient: HttpClient, json: Json): DefaultApi {
    private val _basePath = basePath
    private val _httpClient = httpClient
    private val _json = json

    /**
    * Get a summary of the API.
    * Returns a bunch of data about the API, like endpoints, versions, and more. This is not really intended to be used by programs, but rather for users (devs) to see when they first use the API.
    * @return void
    */
    override suspend fun nekosapiApiIndex() : kotlin.Unit {
        try {
            nekosapiApiIndexResponse()
        } catch (pipeline: ReceivePipelineException) {
            throw pipeline.cause
        }
    }

    /**
    * Get a summary of the API.
    * Returns a bunch of data about the API, like endpoints, versions, and more. This is not really intended to be used by programs, but rather for users (devs) to see when they first use the API.
    * @return HttpResponse
    */
    override suspend fun nekosapiApiIndexResponse() : kotlin.Unit {
        val builder = HttpRequestBuilder()

        builder.method = HttpMethod.Get
        builder.url {
            takeFrom(_basePath)
            encodedPath = encodedPath.let { startingPath ->
                path("v3/")
                return@let startingPath + encodedPath
            }
        }

        with(builder.headers) {
            append("Accept", "application/json")
        }

        val response = _httpClient.request(builder)

    }

}
